{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"@TODO \u8bf7\u5c06\u672c\u9875\u9762\u66ff\u6362\u6210\u6574\u4f53\u4ecb\u7ecd Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"\u9996\u9875"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"manual/edit/","text":"\u7f16\u8f91\u9875\u9762 @TODO Markdown; LaTeX math","title":"\u7f16\u8f91\u9875\u9762"},{"location":"manual/edit/#_1","text":"@TODO Markdown; LaTeX math","title":"\u7f16\u8f91\u9875\u9762"},{"location":"manual/upd/","text":"\u53d1\u5e03\u66f4\u65b0 @TODO","title":"\u53d1\u5e03\u66f4\u65b0"},{"location":"manual/upd/#_1","text":"@TODO","title":"\u53d1\u5e03\u66f4\u65b0"},{"location":"pytorch/basics/","text":"\u57fa\u7840\u77e5\u8bc6 \u8f7d\u5165 PyTorch \u4e3a\u4e86\u4f7f\u7528 PyTorch\uff0c\u9996\u5148\u5728 Python \u4ee3\u7801\u7684\u6700\u4e0a\u65b9\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801\u6765\u8f7d\u5165 PyTorch\uff08\u6ce8\u610f\u662f torch \u800c\u975e pytorch \uff09\u3002 import torch \u6570\u636e\u7684\u8868\u793a \u5728 PyTorch \u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f7f\u7528 \u5f20\u91cf \uff08tensor\uff09\u7c7b\u578b\u6765\u50a8\u5b58\uff0c\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a C/C++ \u91cc\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u521b\u5efa\u5f20\u91cf\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 torch.tensor \u3002PyTorch \u4e2d\u7684\u5f20\u91cf\u53ef\u4ee5\u662f\u6570\u5b66\u4e2d\u7684\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u6216\u4efb\u610f\u9ad8\u7ef4\u5f20\u91cf\u3002 # \u6807\u91cf a0 = torch.tensor(0) # \u5411\u91cf a1 = torch.tensor([0, 1]) # \u77e9\u9635 a2 = torch.tensor([[0, 1, 2], [3, 4, 5]]) # 3\u7ef4\u6570\u7ec4 a3 = torch.tensor([[[0, 1], [2, 3]], [[4, 5], [6, 7]], [[8, 9], [10, 11]], [[12, 13], [14, 15]]]) \u7ef4\u5ea6\u548c\u5c3a\u5bf8 @TODO a = torch.arange(12) # \u5bf9\u5e94Python\u91cc\u7684range(12) a.size() # \u8fd4\u56de\uff1atorch.Size([12]) a.size(dim = -1) # \u8fd4\u56de\uff1a12 @TODO b = a.view(3, 4) # \u5c3a\u5bf8\u53d8\u4e3a [3, 4] b = a.view(-1, 4) # \u5c3a\u5bf8\u53d8\u4e3a [3, 4] @TODO b = a.unsqueeze(dim = 0) # \u5c3a\u5bf8\u53d8\u4e3a [1, 12] c = b.squeeze(dim = 0) # \u5c3a\u5bf8\u53d8\u4e3a [12] @TODO \u6807\u91cf\u6ca1\u6709\u5c3a\u5bf8\u3002 torch.tensor(0).size() # \u8fd4\u56de\uff1atorch.Size([]) @TODO \u6570\u636e\u7c7b\u578b \u548c\u4e00\u822c\u7684 Python \u53d8\u91cf\u4e0d\u540c\uff0cPyTorch \u4e2d\u7684\u6570\u636e\u662f\u6709\u7c7b\u578b\u7684\uff0c\u5176\u4e2d\u5e38\u7528\u7684\u7c7b\u578b\u6709\u5e03\u5c14\u578b\uff08 torch.bool \uff09\u3001\u6574\u6570\uff08 torch.long \uff09\u548c\u6d6e\u70b9\u6570\uff08 torch.float \uff09\u3002 \u6ce8\u610f\uff1a \u6574\u6570\u548c\u6d6e\u70b9\u6570\u7684\u9ed8\u8ba4\u7cbe\u5ea6\u5728\u4e0d\u540c\u8ba1\u7b97\u673a\u4e0a\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u5728\u5e38\u89c1\u7684 64 \u4f4d\u8ba1\u7b97\u673a\u4e0a\uff0c torch.long \u4e00\u822c\u662f torch.int64 \uff0c torch.float \u4e00\u822c\u662f torch.float32 \u3002 \u67e5\u770b\u6570\u636e\u7c7b\u578b \u4e0e C/C++ \u7684\u6570\u7ec4\u7c7b\u4f3c\uff0c\u540c\u4e00\u5f20\u91cf\u4e2d\u7684\u6240\u6709\u503c\u53ea\u80fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u67e5\u770b\u5f20\u91cf a \u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 a.dtype \u5c5e\u6027\u3002 a = torch.tensor([1, 2]) a.dtype # \u8fd4\u56detorch.int64\uff0c\u76f8\u5f53\u4e8etorch.long \u6307\u5b9a\u6570\u636e\u7c7b\u578b \u5982\u679c\u60f3\u5728\u521b\u5efa\u5f20\u91cf\u65f6\u5c31\u6307\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5 1\uff1a\u5728 torch.tensor \u4e2d\u6307\u5b9a dtype \u53c2\u6570\uff0c\u82e5\u7c7b\u578b\u4e0d\u7b26\u5408\u5219\u4f1a\u81ea\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 a = torch.tensor([True, True, False], dtype = torch.float) # \u7ed3\u679c\uff1atensor([1., 1., 0.]) \u65b9\u6cd5 2\uff1a\u76f4\u63a5\u8c03\u7528\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u5f20\u91cf\u7684\u6784\u9020\u51fd\u6570\uff08\u6ce8\u610f\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u82e5\u7c7b\u578b\u4e0d\u7b26\u5408\u4e5f\u4f1a\u81ea\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 b = torch.BoolTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([True, True, False]) c = torch.LongTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([1, 1, 0]) d = torch.FloatTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([1., 1., 0.]) \u6570\u636e\u7c7b\u578b\u8f6c\u6362 \u5982\u679c\u60f3\u5c06\u8f6c\u6362\u5f20\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5 1\uff1a\u4f7f\u7528 .to \u51fd\u6570\uff0c\u5982 a.to(torch.float) \u3002 \u65b9\u6cd5 2\uff1a\u4f7f\u7528 .bool() \u3001 .long() \u3001 .float() \u7b49\u51fd\u6570\uff0c\u5982 b.long() \u3001 c.bool() \u7b49\u3002 \u5f20\u91cf\u7684\u8fd0\u7b97 @TODO \u6279\u91cf\u5316\u8ba1\u7b97 @TODO c = a + b # \u76f8\u5f53\u4e8e\uff1ac[i] = a[i] + b[i] Broadcasting \u89c4\u5219 @TODO \u4f8b\u5982\uff0c\u6709\u4e00\u4e2a\u957f\u4e3a m \u7684\u5411\u91cf \\boldsymbol a \u548c\u4e00\u4e2a\u957f\u4e3a n \u7684\u5411\u91cf \\boldsymbol b \uff0c\u8981\u521b\u5efa\u4e00\u4e2a m\\times n \u7684\u77e9\u9635 \\boldsymbol C \u6ee1\u8db3\u7b2c i \u884c\u7b2c j \u5217\u7684\u6570\u662f a_i+b_j \uff0c\u5219\u53ef\u4ee5\u5148\u5c06 \\boldsymbol a \u53d8\u5f62\u6210\u4e00\u4e2a m\\times 1 \u7684\u77e9\u9635\uff0c\u7136\u540e\u5229\u7528 broadcasting \u89c4\u5219\u6765\u8ba1\u7b97 \\boldsymbol C \u3002 C = a.unsqueeze(dim = -1) + b \u5bfc\u51fa\u8fd0\u7b97\u7ed3\u679c @TODO a.item() # \u53ea\u80fd\u7528\u4e8e\u6807\u91cf\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aPython\u6807\u91cf b.tolist() # \u4e0d\u80fd\u7528\u4e8e\u6807\u91cf\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3alist c.cpu().detach().numpy() # \u901a\u7528\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aNumPy @TODO PyTorch \u5e38\u7528\u6a21\u5757 @TODO import torch @TODO import torch.nn.functional as F @TODO from torch import nn @TODO from torch import optim @TODO *\u4f7f\u7528 GPU \u52a0\u901f\u8fd0\u7b97 \u5982\u679c\u4f60\u7684\u8ba1\u7b97\u673a\u914d\u6709\u53ef\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u7684 NVIDIA GPU\uff0c\u4e14\u5df2\u7ecf\u5b89\u88c5\u4e86 GPU \u7248 PyTorch \u53ca\u76f8\u5e94\u7248\u672c\u7684 NVIDIA CUDA \u9a71\u52a8\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 GPU \u6765\u52a0\u901f PyTorch \u4e2d\u7684\u8fd0\u7b97\uff0c\u5728\u5927\u89c4\u6a21\u8fd0\u7b97\u65f6\u4e00\u822c\u4f1a\u6709 5~10 \u500d\u7684\u52a0\u901f\u3002\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 torch.cuda.is_available() \u6765\u786e\u8ba4\u8ba1\u7b97\u673a\u662f\u5426\u652f\u6301 GPU \u52a0\u901f\uff0c\u5982\u679c\u652f\u6301\u5219\u4f1a\u8fd4\u56de True \u3002 \u63d0\u793a\uff1a \u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5355\u4e2a GPU \u7684\u60c5\u51b5\u3002\u591a\u4e2a GPU \u7684\u60c5\u51b5\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u3002 \u8981\u4f7f\u7528 GPU\uff0c\u9996\u5148\u9700\u6307\u5b9a\u8fd0\u7b97\u8bbe\u5907\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5728\u652f\u6301\u548c\u4e0d\u652f\u6301 GPU \u7684\u8ba1\u7b97\u673a\u4e0a\u90fd\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u3002 device = torch.device('cuda' if torch.cuda.is_available() else 'cpu') \u4e3a\u4e86\u8ba9 GPU \u52a0\u901f\u8fd0\u7b97\uff0c\u9700\u8981\u5728\u8fd0\u7b97\u524d\u4f7f\u7528 .to(device) \u5c06\u5f85\u8fd0\u7b97\u7684\u6570\u636e\u4ece\u5185\u5b58\u8f6c\u79fb\u5230 GPU \u7684\u663e\u5b58\uff1b\u8fd0\u7b97\u540e\u7684\u7ed3\u679c\u4ecd\u7136\u4f1a\u4fdd\u5b58\u5728\u663e\u5b58\u91cc\u3002\u5df2\u7ecf\u8f6c\u79fb\u8fc7\u7684\u6570\u636e\u548c\u8fd0\u7b97\u7ed3\u679c\u4e0d\u5fc5\u91cd\u65b0\u8f6c\u79fb\u3002 b = b.to(device) c = a.to(device) + b # c\u7684\u7ed3\u679c\u5df2\u5b58\u81f3\u663e\u5b58\u91cc d = a.to(device) + b * c # \u4e0d\u5fc5\u518d\u8f6c\u79fbb\u6216c \u6ce8\u610f\uff1a \u540c\u4e00\u8fd0\u7b97\u4e2d\u6d89\u53ca\u5230\u7684\u6240\u6709\u53d8\u91cf\u5fc5\u987b\u5728\u540c\u4e00\u8bbe\u5907\u91cc\uff0c\u5047\u5982 a \u5728\u5185\u5b58\u91cc\u800c b \u5728\u663e\u5b58\u91cc\uff0c\u5219 a + b \u4f1a\u62a5\u9519\u3002 \u63d0\u793a\uff1a \u5c3d\u7ba1 PyTorch \u4e2d\u7edd\u5927\u591a\u6570\u8fd0\u7b97\u90fd\u652f\u6301 GPU\uff0c\u4f46\u4ecd\u6709\u5c11\u91cf\u4e0d\u5e38\u7528\u7684\u8fd0\u7b97\u76ee\u524d\u8fd8\u4e0d\u652f\u6301 GPU\u3002\u5982\u679c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u62a5\u9519\uff0c\u8bf7\u7528 .cpu() \u51fd\u6570\u5c06\u6570\u636e\u8f6c\u79fb\u56de\u5185\u5b58\u4e4b\u540e\u518d\u8fdb\u884c\u8fd0\u7b97\u3002","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"pytorch/basics/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"pytorch/basics/#pytorch","text":"\u4e3a\u4e86\u4f7f\u7528 PyTorch\uff0c\u9996\u5148\u5728 Python \u4ee3\u7801\u7684\u6700\u4e0a\u65b9\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801\u6765\u8f7d\u5165 PyTorch\uff08\u6ce8\u610f\u662f torch \u800c\u975e pytorch \uff09\u3002 import torch","title":"\u8f7d\u5165 PyTorch"},{"location":"pytorch/basics/#_2","text":"\u5728 PyTorch \u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f7f\u7528 \u5f20\u91cf \uff08tensor\uff09\u7c7b\u578b\u6765\u50a8\u5b58\uff0c\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a C/C++ \u91cc\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u521b\u5efa\u5f20\u91cf\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 torch.tensor \u3002PyTorch \u4e2d\u7684\u5f20\u91cf\u53ef\u4ee5\u662f\u6570\u5b66\u4e2d\u7684\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u6216\u4efb\u610f\u9ad8\u7ef4\u5f20\u91cf\u3002 # \u6807\u91cf a0 = torch.tensor(0) # \u5411\u91cf a1 = torch.tensor([0, 1]) # \u77e9\u9635 a2 = torch.tensor([[0, 1, 2], [3, 4, 5]]) # 3\u7ef4\u6570\u7ec4 a3 = torch.tensor([[[0, 1], [2, 3]], [[4, 5], [6, 7]], [[8, 9], [10, 11]], [[12, 13], [14, 15]]])","title":"\u6570\u636e\u7684\u8868\u793a"},{"location":"pytorch/basics/#_3","text":"@TODO a = torch.arange(12) # \u5bf9\u5e94Python\u91cc\u7684range(12) a.size() # \u8fd4\u56de\uff1atorch.Size([12]) a.size(dim = -1) # \u8fd4\u56de\uff1a12 @TODO b = a.view(3, 4) # \u5c3a\u5bf8\u53d8\u4e3a [3, 4] b = a.view(-1, 4) # \u5c3a\u5bf8\u53d8\u4e3a [3, 4] @TODO b = a.unsqueeze(dim = 0) # \u5c3a\u5bf8\u53d8\u4e3a [1, 12] c = b.squeeze(dim = 0) # \u5c3a\u5bf8\u53d8\u4e3a [12] @TODO \u6807\u91cf\u6ca1\u6709\u5c3a\u5bf8\u3002 torch.tensor(0).size() # \u8fd4\u56de\uff1atorch.Size([]) @TODO","title":"\u7ef4\u5ea6\u548c\u5c3a\u5bf8"},{"location":"pytorch/basics/#_4","text":"\u548c\u4e00\u822c\u7684 Python \u53d8\u91cf\u4e0d\u540c\uff0cPyTorch \u4e2d\u7684\u6570\u636e\u662f\u6709\u7c7b\u578b\u7684\uff0c\u5176\u4e2d\u5e38\u7528\u7684\u7c7b\u578b\u6709\u5e03\u5c14\u578b\uff08 torch.bool \uff09\u3001\u6574\u6570\uff08 torch.long \uff09\u548c\u6d6e\u70b9\u6570\uff08 torch.float \uff09\u3002 \u6ce8\u610f\uff1a \u6574\u6570\u548c\u6d6e\u70b9\u6570\u7684\u9ed8\u8ba4\u7cbe\u5ea6\u5728\u4e0d\u540c\u8ba1\u7b97\u673a\u4e0a\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u5728\u5e38\u89c1\u7684 64 \u4f4d\u8ba1\u7b97\u673a\u4e0a\uff0c torch.long \u4e00\u822c\u662f torch.int64 \uff0c torch.float \u4e00\u822c\u662f torch.float32 \u3002","title":"\u6570\u636e\u7c7b\u578b"},{"location":"pytorch/basics/#_5","text":"\u4e0e C/C++ \u7684\u6570\u7ec4\u7c7b\u4f3c\uff0c\u540c\u4e00\u5f20\u91cf\u4e2d\u7684\u6240\u6709\u503c\u53ea\u80fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u67e5\u770b\u5f20\u91cf a \u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 a.dtype \u5c5e\u6027\u3002 a = torch.tensor([1, 2]) a.dtype # \u8fd4\u56detorch.int64\uff0c\u76f8\u5f53\u4e8etorch.long","title":"\u67e5\u770b\u6570\u636e\u7c7b\u578b"},{"location":"pytorch/basics/#_6","text":"\u5982\u679c\u60f3\u5728\u521b\u5efa\u5f20\u91cf\u65f6\u5c31\u6307\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5 1\uff1a\u5728 torch.tensor \u4e2d\u6307\u5b9a dtype \u53c2\u6570\uff0c\u82e5\u7c7b\u578b\u4e0d\u7b26\u5408\u5219\u4f1a\u81ea\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 a = torch.tensor([True, True, False], dtype = torch.float) # \u7ed3\u679c\uff1atensor([1., 1., 0.]) \u65b9\u6cd5 2\uff1a\u76f4\u63a5\u8c03\u7528\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u5f20\u91cf\u7684\u6784\u9020\u51fd\u6570\uff08\u6ce8\u610f\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u82e5\u7c7b\u578b\u4e0d\u7b26\u5408\u4e5f\u4f1a\u81ea\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 b = torch.BoolTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([True, True, False]) c = torch.LongTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([1, 1, 0]) d = torch.FloatTensor([1, 1, 0]) # \u7ed3\u679c\uff1atensor([1., 1., 0.])","title":"\u6307\u5b9a\u6570\u636e\u7c7b\u578b"},{"location":"pytorch/basics/#_7","text":"\u5982\u679c\u60f3\u5c06\u8f6c\u6362\u5f20\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5 1\uff1a\u4f7f\u7528 .to \u51fd\u6570\uff0c\u5982 a.to(torch.float) \u3002 \u65b9\u6cd5 2\uff1a\u4f7f\u7528 .bool() \u3001 .long() \u3001 .float() \u7b49\u51fd\u6570\uff0c\u5982 b.long() \u3001 c.bool() \u7b49\u3002","title":"\u6570\u636e\u7c7b\u578b\u8f6c\u6362"},{"location":"pytorch/basics/#_8","text":"@TODO","title":"\u5f20\u91cf\u7684\u8fd0\u7b97"},{"location":"pytorch/basics/#_9","text":"@TODO c = a + b # \u76f8\u5f53\u4e8e\uff1ac[i] = a[i] + b[i]","title":"\u6279\u91cf\u5316\u8ba1\u7b97"},{"location":"pytorch/basics/#broadcasting","text":"@TODO \u4f8b\u5982\uff0c\u6709\u4e00\u4e2a\u957f\u4e3a m \u7684\u5411\u91cf \\boldsymbol a \u548c\u4e00\u4e2a\u957f\u4e3a n \u7684\u5411\u91cf \\boldsymbol b \uff0c\u8981\u521b\u5efa\u4e00\u4e2a m\\times n \u7684\u77e9\u9635 \\boldsymbol C \u6ee1\u8db3\u7b2c i \u884c\u7b2c j \u5217\u7684\u6570\u662f a_i+b_j \uff0c\u5219\u53ef\u4ee5\u5148\u5c06 \\boldsymbol a \u53d8\u5f62\u6210\u4e00\u4e2a m\\times 1 \u7684\u77e9\u9635\uff0c\u7136\u540e\u5229\u7528 broadcasting \u89c4\u5219\u6765\u8ba1\u7b97 \\boldsymbol C \u3002 C = a.unsqueeze(dim = -1) + b","title":"Broadcasting \u89c4\u5219"},{"location":"pytorch/basics/#_10","text":"@TODO a.item() # \u53ea\u80fd\u7528\u4e8e\u6807\u91cf\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aPython\u6807\u91cf b.tolist() # \u4e0d\u80fd\u7528\u4e8e\u6807\u91cf\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3alist c.cpu().detach().numpy() # \u901a\u7528\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aNumPy @TODO","title":"\u5bfc\u51fa\u8fd0\u7b97\u7ed3\u679c"},{"location":"pytorch/basics/#pytorch_1","text":"@TODO import torch @TODO import torch.nn.functional as F @TODO from torch import nn @TODO from torch import optim @TODO","title":"PyTorch \u5e38\u7528\u6a21\u5757"},{"location":"pytorch/basics/#gpu","text":"\u5982\u679c\u4f60\u7684\u8ba1\u7b97\u673a\u914d\u6709\u53ef\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u7684 NVIDIA GPU\uff0c\u4e14\u5df2\u7ecf\u5b89\u88c5\u4e86 GPU \u7248 PyTorch \u53ca\u76f8\u5e94\u7248\u672c\u7684 NVIDIA CUDA \u9a71\u52a8\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 GPU \u6765\u52a0\u901f PyTorch \u4e2d\u7684\u8fd0\u7b97\uff0c\u5728\u5927\u89c4\u6a21\u8fd0\u7b97\u65f6\u4e00\u822c\u4f1a\u6709 5~10 \u500d\u7684\u52a0\u901f\u3002\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 torch.cuda.is_available() \u6765\u786e\u8ba4\u8ba1\u7b97\u673a\u662f\u5426\u652f\u6301 GPU \u52a0\u901f\uff0c\u5982\u679c\u652f\u6301\u5219\u4f1a\u8fd4\u56de True \u3002 \u63d0\u793a\uff1a \u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5355\u4e2a GPU \u7684\u60c5\u51b5\u3002\u591a\u4e2a GPU \u7684\u60c5\u51b5\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u3002 \u8981\u4f7f\u7528 GPU\uff0c\u9996\u5148\u9700\u6307\u5b9a\u8fd0\u7b97\u8bbe\u5907\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5728\u652f\u6301\u548c\u4e0d\u652f\u6301 GPU \u7684\u8ba1\u7b97\u673a\u4e0a\u90fd\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u3002 device = torch.device('cuda' if torch.cuda.is_available() else 'cpu') \u4e3a\u4e86\u8ba9 GPU \u52a0\u901f\u8fd0\u7b97\uff0c\u9700\u8981\u5728\u8fd0\u7b97\u524d\u4f7f\u7528 .to(device) \u5c06\u5f85\u8fd0\u7b97\u7684\u6570\u636e\u4ece\u5185\u5b58\u8f6c\u79fb\u5230 GPU \u7684\u663e\u5b58\uff1b\u8fd0\u7b97\u540e\u7684\u7ed3\u679c\u4ecd\u7136\u4f1a\u4fdd\u5b58\u5728\u663e\u5b58\u91cc\u3002\u5df2\u7ecf\u8f6c\u79fb\u8fc7\u7684\u6570\u636e\u548c\u8fd0\u7b97\u7ed3\u679c\u4e0d\u5fc5\u91cd\u65b0\u8f6c\u79fb\u3002 b = b.to(device) c = a.to(device) + b # c\u7684\u7ed3\u679c\u5df2\u5b58\u81f3\u663e\u5b58\u91cc d = a.to(device) + b * c # \u4e0d\u5fc5\u518d\u8f6c\u79fbb\u6216c \u6ce8\u610f\uff1a \u540c\u4e00\u8fd0\u7b97\u4e2d\u6d89\u53ca\u5230\u7684\u6240\u6709\u53d8\u91cf\u5fc5\u987b\u5728\u540c\u4e00\u8bbe\u5907\u91cc\uff0c\u5047\u5982 a \u5728\u5185\u5b58\u91cc\u800c b \u5728\u663e\u5b58\u91cc\uff0c\u5219 a + b \u4f1a\u62a5\u9519\u3002 \u63d0\u793a\uff1a \u5c3d\u7ba1 PyTorch \u4e2d\u7edd\u5927\u591a\u6570\u8fd0\u7b97\u90fd\u652f\u6301 GPU\uff0c\u4f46\u4ecd\u6709\u5c11\u91cf\u4e0d\u5e38\u7528\u7684\u8fd0\u7b97\u76ee\u524d\u8fd8\u4e0d\u652f\u6301 GPU\u3002\u5982\u679c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u62a5\u9519\uff0c\u8bf7\u7528 .cpu() \u51fd\u6570\u5c06\u6570\u636e\u8f6c\u79fb\u56de\u5185\u5b58\u4e4b\u540e\u518d\u8fdb\u884c\u8fd0\u7b97\u3002","title":"*\u4f7f\u7528 GPU \u52a0\u901f\u8fd0\u7b97"},{"location":"pytorch/cnn/","text":"\u56fe\u50cf\u6570\u636e\u5efa\u6a21\uff1aCNN \u63d0\u793a\uff1a \u672c\u6559\u7a0b\u7684\u4e3b\u8981\u76ee\u7684\u662f PyTorch \u5165\u95e8\uff0c\u5e76\u4e0d\u4f1a\u6df1\u5165\u8bb2\u8ff0\u7b97\u6cd5\u80cc\u540e\u7684\u6570\u5b66\u539f\u7406\u3002\u5982\u679c\u4f60\u60f3\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u5176\u6570\u5b66\u539f\u7406\uff0c\u8bf7\u53c2\u8003 \u6df1\u5ea6\u5b66\u4e60\u6559\u7a0b@TODO \u3002 \u63d0\u793a\uff1a \u8fd9\u91cc\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 PyTorch\u3002\u5173\u4e8e\u5982\u4f55\u5b89\u88c5\uff0c\u53c2\u89c1 \u5b89\u88c5 PyTorch \u3002 \u5728 PyTorch \u4e2d\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u5efa\u6a21\u7684\u4e00\u822c\u6d41\u7a0b\u662f\uff1a \u52a0\u8f7d\u6570\u636e\u96c6\uff1b \u5b9a\u4e49\u795e\u7ecf\u7f51\u7edc\uff1b \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff1b \u6d4b\u8bd5\u795e\u7ecf\u7f51\u7edc\u3002 \u4e0b\u9762\u5c06\u4ee5\u624b\u5199\u6570\u5b57\u8bc6\u522b\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u7528 PyTorch \u8fdb\u884c\u56fe\u50cf\u5206\u7c7b\u7684\u4e00\u822c\u6d41\u7a0b\u3002 \u52a0\u8f7d\u6570\u636e\u96c6 \u5728 PyTorch \u4e2d\uff0c\u6240\u6709\u6570\u636e\u5747\u4f7f\u7528 \u5f20\u91cf \uff08Tensor\uff09\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\u6765\u50a8\u5b58\uff0c\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u6210\u591a\u7ef4\u6570\u7ec4\u3002 @TODO \u5b9a\u4e49\u795e\u7ecf\u7f51\u7edc @TODO \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc @TODO \u6d4b\u8bd5\u795e\u7ecf\u7f51\u7edc @TODO","title":"\u56fe\u50cf\u6570\u636e\u5efa\u6a21\uff1aCNN"},{"location":"pytorch/cnn/#cnn","text":"\u63d0\u793a\uff1a \u672c\u6559\u7a0b\u7684\u4e3b\u8981\u76ee\u7684\u662f PyTorch \u5165\u95e8\uff0c\u5e76\u4e0d\u4f1a\u6df1\u5165\u8bb2\u8ff0\u7b97\u6cd5\u80cc\u540e\u7684\u6570\u5b66\u539f\u7406\u3002\u5982\u679c\u4f60\u60f3\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u5176\u6570\u5b66\u539f\u7406\uff0c\u8bf7\u53c2\u8003 \u6df1\u5ea6\u5b66\u4e60\u6559\u7a0b@TODO \u3002 \u63d0\u793a\uff1a \u8fd9\u91cc\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 PyTorch\u3002\u5173\u4e8e\u5982\u4f55\u5b89\u88c5\uff0c\u53c2\u89c1 \u5b89\u88c5 PyTorch \u3002 \u5728 PyTorch \u4e2d\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u5efa\u6a21\u7684\u4e00\u822c\u6d41\u7a0b\u662f\uff1a \u52a0\u8f7d\u6570\u636e\u96c6\uff1b \u5b9a\u4e49\u795e\u7ecf\u7f51\u7edc\uff1b \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff1b \u6d4b\u8bd5\u795e\u7ecf\u7f51\u7edc\u3002 \u4e0b\u9762\u5c06\u4ee5\u624b\u5199\u6570\u5b57\u8bc6\u522b\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u7528 PyTorch \u8fdb\u884c\u56fe\u50cf\u5206\u7c7b\u7684\u4e00\u822c\u6d41\u7a0b\u3002","title":"\u56fe\u50cf\u6570\u636e\u5efa\u6a21\uff1aCNN"},{"location":"pytorch/cnn/#_1","text":"\u5728 PyTorch \u4e2d\uff0c\u6240\u6709\u6570\u636e\u5747\u4f7f\u7528 \u5f20\u91cf \uff08Tensor\uff09\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\u6765\u50a8\u5b58\uff0c\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u6210\u591a\u7ef4\u6570\u7ec4\u3002 @TODO","title":"\u52a0\u8f7d\u6570\u636e\u96c6"},{"location":"pytorch/cnn/#_2","text":"@TODO","title":"\u5b9a\u4e49\u795e\u7ecf\u7f51\u7edc"},{"location":"pytorch/cnn/#_3","text":"@TODO","title":"\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc"},{"location":"pytorch/cnn/#_4","text":"@TODO","title":"\u6d4b\u8bd5\u795e\u7ecf\u7f51\u7edc"},{"location":"pytorch/getting-started/","text":"\u5b89\u88c5 PyTorch @TODO *\u5b89\u88c5 GPU \u7248 PyTorch @TODO","title":"\u5b89\u88c5"},{"location":"pytorch/getting-started/#pytorch","text":"@TODO","title":"\u5b89\u88c5 PyTorch"},{"location":"pytorch/getting-started/#gpu-pytorch","text":"@TODO","title":"*\u5b89\u88c5 GPU \u7248 PyTorch"},{"location":"pytorch/mlp/","text":"@TODO","title":"\u5411\u91cf\u6570\u636e\u5efa\u6a21\uff1aMLP"},{"location":"pytorch/rnn/","text":"@TODO","title":"\u5e8f\u5217\u6570\u636e\u5efa\u6a21\uff1aRNN"},{"location":"tensorflow/basics/","text":"\u57fa\u7840\u77e5\u8bc6 @TODO","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"tensorflow/basics/#_1","text":"@TODO","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"tensorflow/getting-started/","text":"\u5b89\u88c5 TensorFlow @TODO","title":"\u5b89\u88c5"},{"location":"tensorflow/getting-started/#tensorflow","text":"@TODO","title":"\u5b89\u88c5 TensorFlow"}]}